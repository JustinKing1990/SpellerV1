
package spellerv1;

import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;


public class SpellerV1 {
    
    public String[] dictionary = new String[235886];
    
    public void dictionary(){
        try{
        File dictionaryIn = new File("dictionary.txt");
        Scanner input = new Scanner(dictionaryIn);
        int i = 0;
        while(input.hasNext()){
            dictionary[i] = input.next().trim().toLowerCase();
            i++;
        }//while
        }//try
        catch(Exception e){
            System.out.println("Error: " + e);
        }//catch
    }//dictionary
    
    public void oliverClean(){
        try{
        File oliverIn = new File("oliver.txt");
        File oliverOut = new File("oliverclean.txt");
        PrintWriter print = new PrintWriter(oliverOut);
        Scanner input = new Scanner(oliverIn);
        Scanner output = new Scanner(oliverOut);
        String temp = "";
        while (input.hasNext()){
            temp = input.nextLine();
            String replaceAll = temp.replaceAll("\\p{Punct}", " ");
            print.println(replaceAll);
        }//while
        }//try
        catch(Exception e){
            System.out.println("Error: " + e);
        }//catch
    }//oliverClean
    
    public void oliver(){
        try{
        File oliver = new File("oliverclean.txt");
        Scanner input = new Scanner(oliver);
        String[] oliverTxt = new String[998804];
        String[] wrongTxt = new String[998804];
        int count = 0;
        int wrong = 0;
        int i = 0;
        int k = 0;
        while(input.hasNext()){
            oliverTxt[i] = input.next().toLowerCase();
            i++;
        }//while
            for (int j = 0; j <  oliverTxt.length; j++) {
                if(oliverSearch(dictionary, oliverTxt[j]) == -1){
                    if(oliverTxt[j].endsWith("s")){
                        StringBuilder build = new StringBuilder(oliverTxt[j]);
                        build.deleteCharAt(build.length()-1);
                        oliverTxt[j] = build.toString();
                        oliverSearch(dictionary, oliverTxt[j]);
                    }
                    wrongTxt[k] = oliverTxt[j];
                    wrong++;
                    k++;
                    }else{
                    count++;
                }//if
            }//for
            System.out.println("There is a total of " + count + " correctly spelled words");
            System.out.println("There is a total of " + wrong + " incorrectly spelled words");
            System.out.print("The incorrect words are ");
            for (int j = 0; j < wrong; j++) {
                
                System.out.print(wrongTxt[j] + " ");
                if(j %10 ==0)
                    System.out.println("");
            }//for
            System.out.println("");
        }//try
        catch(Exception e){
            System.out.println("Error: " + e);
        }//catch
    }//oliver
    
    public static int oliverSearch(String[] list, String key) {
    int low = 0;
    int high = list.length - 1;
    return oliverSearch(list, key, low, high);
  }

  private static int oliverSearch(String[] list, String key,
      int low, int high) {
      
    if (low > high)  // The list has been exhausted without a match
        return -1;
    

    int mid = (low + high) / 2;
    if (list[mid].compareTo(key) > 0)
      return oliverSearch(list, key, low, mid - 1);
    else if (list[mid].compareTo(key) == 0)
      return mid;
    else
      return oliverSearch(list, key, mid + 1, high);
  }


    public static void main(String[] args) {
        SpellerV1 ans = new SpellerV1();
        ans.dictionary();
        ans.oliverClean();
        ans.oliver();
    }
    
}
